// –ö–ª–∞—Å—Å GuitarString (–ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –∫–æ–Ω—Ñ–ª–∏–∫—Ç–∞)
class GuitarString {
	private int number; // –Ω–æ–º–µ—Ä —Å—Ç—Ä—É–Ω—ã
	private String note; // –Ω–æ—Ç–∞
	private boolean isTuned; // –Ω–∞—Ç—è–Ω—É—Ç–∞ –ª–∏ —Å—Ç—Ä—É–Ω–∞
	private double tension; // –Ω–∞—Ç—è–∂–µ–Ω–∏–µ

	public GuitarString(int number, String note) {
		this.number = number;
		this.note = note;
		this.isTuned = false;
		this.tension = 0.0;
	}

	public GuitarString(int number) {
		this(number, "E"); // –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –Ω–æ—Ç–∞ E
	}

	// –ú–µ—Ç–æ–¥ –¥–ª—è –Ω–∞—Ç—è–≥–∏–≤–∞–Ω–∏—è —Å—Ç—Ä—É–Ω—ã
	public void tune() {
		this.isTuned = true;
		this.tension = 8.0; // —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –Ω–∞—Ç—è–∂–µ–Ω–∏–µ
		System.out.println("–°—Ç—Ä—É–Ω–∞ " + number + " –Ω–∞—Ç—è–Ω—É—Ç–∞ –¥–æ –Ω–æ—Ç—ã " + note);
	}

	// –ú–µ—Ç–æ–¥ –¥–ª—è –Ω–∞—Ç—è–≥–∏–≤–∞–Ω–∏—è —Å—Ç—Ä—É–Ω—ã –¥–æ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–π –Ω–æ—Ç—ã
	public void tune(String targetNote) {
		this.note = targetNote;
		this.isTuned = true;
		this.tension = 8.0;
		System.out.println("–°—Ç—Ä—É–Ω–∞ " + number + " –Ω–∞—Ç—è–Ω—É—Ç–∞ –¥–æ –Ω–æ—Ç—ã " + targetNote);
	}

	// –ú–µ—Ç–æ–¥ –¥–ª—è –∏–≥—Ä—ã –Ω–∞ —Å—Ç—Ä—É–Ω–µ
	public void play() {
		if (isTuned) {
			System.out.println("–°—Ç—Ä—É–Ω–∞ " + number + " –∑–≤—É—á–∏—Ç –Ω–æ—Ç–∞ " + note + " ‚ô´");
		} else {
			System.out.println("–°—Ç—Ä—É–Ω–∞ " + number + " –Ω–µ –Ω–∞—Ç—è–Ω—É—Ç–∞! –ó–≤—É–∫–∞ –Ω–µ—Ç.");
		}
	}

	// –ú–µ—Ç–æ–¥ –¥–ª—è –æ—Å–ª–∞–±–ª–µ–Ω–∏—è —Å—Ç—Ä—É–Ω—ã
	public void loosen() {
		this.isTuned = false;
		this.tension = 0.0;
		System.out.println("–°—Ç—Ä—É–Ω–∞ " + number + " –æ—Å–ª–∞–±–ª–µ–Ω–∞");
	}

	// –ì–µ—Ç—Ç–µ—Ä—ã
	public int getNumber() {
		return number;
	}

	public String getNote() {
		return note;
	}

	public boolean isTuned() {
		return isTuned;
	}

	public double getTension() {
		return tension;
	}

	// –°–µ—Ç—Ç–µ—Ä –¥–ª—è –Ω–æ—Ç—ã
	public void setNote(String note) {
		this.note = note;
	}

	@Override
	public String toString() {
		return "–°—Ç—Ä—É–Ω–∞ " + number + " [–Ω–æ—Ç–∞: " + note + ", –Ω–∞—Ç—è–Ω—É—Ç–∞: " + isTuned + "]";
	}
}

// –ö–ª–∞—Å—Å –ì–∏—Ç–∞—Ä–∞
class Guitar {
	private String brand;
	private String model;
	private int stringCount;
	private GuitarString[] strings; // –º–∞—Å—Å–∏–≤ —Å—Ç—Ä—É–Ω

	// –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –Ω–æ—Ç—ã –¥–ª—è 6-—Å—Ç—Ä—É–Ω–Ω–æ–π –≥–∏—Ç–∞—Ä—ã
	private static final String[] STANDARD_TUNING = { "E", "A", "D", "G", "B", "E" };

	public Guitar(String brand, String model, int stringCount) {
		this.brand = brand;
		this.model = model;
		this.stringCount = stringCount;
		this.strings = new GuitarString[stringCount];
		initializeStrings();
	}

	public Guitar(String brand, String model) {
		this(brand, model, 6); // –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 6 —Å—Ç—Ä—É–Ω
	}

	public Guitar() {
		this("Fender", "Stratocaster", 6);
	}

	// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç—Ä—É–Ω
	private void initializeStrings() {
		for (int i = 0; i < stringCount; i++) {
			String note = (stringCount == 6 && i < STANDARD_TUNING.length) ? STANDARD_TUNING[i] : "E";
			strings[i] = new GuitarString(i + 1, note);
		}
	}

	// –ú–µ—Ç–æ–¥ –¥–ª—è –∏–≥—Ä—ã –Ω–∞ –≥–∏—Ç–∞—Ä–µ
	public void play() {
		System.out.println("üé∏ –ò–≥—Ä–∞–µ–º –Ω–∞ –≥–∏—Ç–∞—Ä–µ " + brand + " " + model + "...");
		for (GuitarString string : strings) {
			string.play();
		}
		System.out.println();
	}

	// –ú–µ—Ç–æ–¥ –¥–ª—è –∏–≥—Ä—ã –Ω–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π —Å—Ç—Ä—É–Ω–µ
	public void playString(int stringNumber) {
		if (stringNumber >= 1 && stringNumber <= stringCount) {
			strings[stringNumber - 1].play();
		} else {
			System.out.println("–°—Ç—Ä—É–Ω—ã —Å –Ω–æ–º–µ—Ä–æ–º " + stringNumber + " –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!");
		}
	}

	// –ú–µ—Ç–æ–¥ –¥–ª—è –∏–≥—Ä—ã –∞–∫–∫–æ—Ä–¥–∞ (–Ω–µ—Å–∫–æ–ª—å–∫–æ —Å—Ç—Ä—É–Ω –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ)
	public void playChord(int... stringNumbers) {
		System.out.println("üé∂ –ò–≥—Ä–∞–µ–º –∞–∫–∫–æ—Ä–¥: ");
		for (int stringNumber : stringNumbers) {
			if (stringNumber >= 1 && stringNumber <= stringCount) {
				strings[stringNumber - 1].play();
			}
		}
		System.out.println();
	}

	// –ú–µ—Ç–æ–¥ –¥–ª—è –Ω–∞—Ç—è–≥–∏–≤–∞–Ω–∏—è –≤—Å–µ—Ö —Å—Ç—Ä—É–Ω
	public void tuneAll() {
		System.out.println("–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –≤—Å–µ —Å—Ç—Ä—É–Ω—ã –≥–∏—Ç–∞—Ä—ã:");
		for (GuitarString string : strings) {
			string.tune();
		}
		System.out.println("–ì–∏—Ç–∞—Ä–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞!\n");
	}

	// –ú–µ—Ç–æ–¥ –¥–ª—è –Ω–∞—Ç—è–≥–∏–≤–∞–Ω–∏—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π —Å—Ç—Ä—É–Ω—ã
	public void tuneString(int stringNumber) {
		if (stringNumber >= 1 && stringNumber <= stringCount) {
			strings[stringNumber - 1].tune();
		} else {
			System.out.println("–°—Ç—Ä—É–Ω—ã —Å –Ω–æ–º–µ—Ä–æ–º " + stringNumber + " –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!");
		}
	}

	// –ú–µ—Ç–æ–¥ –¥–ª—è –Ω–∞—Ç—è–≥–∏–≤–∞–Ω–∏—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π —Å—Ç—Ä—É–Ω—ã –¥–æ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–π –Ω–æ—Ç—ã
	public void tuneString(int stringNumber, String note) {
		if (stringNumber >= 1 && stringNumber <= stringCount) {
			strings[stringNumber - 1].tune(note);
		} else {
			System.out.println("–°—Ç—Ä—É–Ω—ã —Å –Ω–æ–º–µ—Ä–æ–º " + stringNumber + " –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!");
		}
	}

	// –ú–µ—Ç–æ–¥ –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≥–∏—Ç–∞—Ä—ã –≤ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Å—Ç—Ä–æ–π
	public void setCustomTuning(String... notes) {
		if (notes.length != stringCount) {
			System.out.println("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–æ—Ç –¥–æ–ª–∂–Ω–æ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤—É —Å—Ç—Ä—É–Ω!");
			return;
		}

		System.out.println("–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Å—Ç—Ä–æ–π:");
		for (int i = 0; i < stringCount; i++) {
			strings[i].tune(notes[i]);
		}
		System.out.println();
	}

	// –ú–µ—Ç–æ–¥ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è –≥–∏—Ç–∞—Ä—ã
	public void checkTuning() {
		System.out.println("–°–æ—Å—Ç–æ—è–Ω–∏–µ –≥–∏—Ç–∞—Ä—ã " + brand + " " + model + ":");
		for (GuitarString string : strings) {
			System.out.println("  " + string);
		}
		System.out.println();
	}

	// –ì–µ—Ç—Ç–µ—Ä—ã
	public String getBrand() {
		return brand;
	}

	public String getModel() {
		return model;
	}

	public int getStringCount() {
		return stringCount;
	}

	public String getStringInfo(int stringNumber) {
		if (stringNumber >= 1 && stringNumber <= stringCount) {
			return strings[stringNumber - 1].toString();
		}
		return "–°—Ç—Ä—É–Ω—ã —Å –Ω–æ–º–µ—Ä–æ–º " + stringNumber + " –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!";
	}

	@Override
	public String toString() {
		return "–ì–∏—Ç–∞—Ä–∞: " + brand + " " + model + " (" + stringCount + " —Å—Ç—Ä—É–Ω)";
	}
}

// –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π –∫–ª–∞—Å—Å
public class GuitarDemo {
	public static void main(String[] args) {
		System.out.println("=== –°–æ–∑–¥–∞–Ω–∏–µ –≥–∏—Ç–∞—Ä—ã ===");
		Guitar myGuitar = new Guitar("Gibson", "Les Paul", 6);
		System.out.println(myGuitar);

		System.out.println("=== –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è ===");
		myGuitar.checkTuning();

		System.out.println("=== –ü–æ–ø—ã—Ç–∫–∞ –∏–≥—Ä—ã –Ω–∞ –Ω–µ–Ω–∞—Å—Ç—Ä–æ–µ–Ω–Ω–æ–π –≥–∏—Ç–∞—Ä–µ ===");
		myGuitar.playString(1);

		System.out.println("=== –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≥–∏—Ç–∞—Ä—ã ===");
		myGuitar.tuneAll();

		System.out.println("=== –ò–≥—Ä–∞ –Ω–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–Ω–æ–π –≥–∏—Ç–∞—Ä–µ ===");
		myGuitar.play();

		System.out.println("=== –ò–≥—Ä–∞ –Ω–∞ –æ—Ç–¥–µ–ª—å–Ω—ã—Ö —Å—Ç—Ä—É–Ω–∞—Ö ===");
		myGuitar.playString(1);
		myGuitar.playString(3);
		myGuitar.playString(6);

		System.out.println("=== –ò–≥—Ä–∞ –∞–∫–∫–æ—Ä–¥–æ–≤ ===");
		myGuitar.playChord(1, 2, 3); // –ü—Ä–æ—Å—Ç–æ–π –∞–∫–∫–æ—Ä–¥

		System.out.println("=== –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ ===");
		myGuitar.setCustomTuning("D", "A", "D", "G", "A", "D"); // –°—Ç—Ä–æ–π Drop D
		myGuitar.checkTuning();
		myGuitar.play();

		System.out.println("=== –°–æ–∑–¥–∞–Ω–∏–µ –¥—Ä—É–≥–æ–π –≥–∏—Ç–∞—Ä—ã ===");
		Guitar acousticGuitar = new Guitar("Yamaha", "F310");
		System.out.println(acousticGuitar);
		acousticGuitar.tuneAll();
		acousticGuitar.play();

		System.out.println("=== –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç—ã —Å–æ —Å—Ç—Ä—É–Ω–∞–º–∏ ===");
		GuitarString singleString = new GuitarString(1, "A");
		singleString.play(); // –ù–µ –Ω–∞—Ç—è–Ω—É—Ç–∞
		singleString.tune(); // –ù–∞—Ç—è–≥–∏–≤–∞–µ–º
		singleString.play(); // –¢–µ–ø–µ—Ä—å –∑–≤—É—á–∏—Ç
	}
}
